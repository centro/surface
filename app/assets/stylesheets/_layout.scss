// ==========================================================================
// Layout 
// ========================================================================== 

// DESC:

// This file contains generic utilities that can be used to affect the layout
// and dimensions of elements on a page. When possible, roll these 
// properties up into higher level modules to avoid "class-itis." 

// TOC:

// [?1] FLOATS
// [?2] GRID
// [?3] HEIGHT
// [?4] MARGIN
// [?5] PADDING
// [?6] WIDTH

// ========================================================================== 

// [?1] FLOATS
// Float elements left or right without coupling to a module.

.l-left {
  float: left !important;
}

.l-right {
  float: right !important;
}

.l-clr-left {
  clear: left; 
}

.l-clr-right {
  clear: right; 
}

.l-clearfix {
  @include pie-clearfix
}

// [?2] GRID
// Instantiate a grid defined by Susy variables. 

.l-grid {
  @include container;
  min-width: $container-min-width; 
}

.l-grid--narrow {
 @extend .l-grid;
 min-width: 980px;
}

// [?3] HEIGHT
// Low level, module-agnostic classes used to manipulate element height.

.l-height\(8\) {
  height: $base-line-height * 8;
}

.l-height\(100\) {
  height: 100%;
}

// [?4] MARGIN
// Baseline units are passed to margin classes as arguments, such that
// (1) equals a value of 24px, (1/2) 12px, and so on.

// Alignment

.l-mg-ctr {
  margin: 0 auto;
}

// Bottom

.l-mg-btm\(0\) {
  margin-bottom: 0 !important;
}

.l-mg-btm\(1\/6\) {
  margin-bottom: $base-line-height / 6 !important;
}

.l-mg-btm\(1\/4\) {
  margin-bottom: $base-line-height / 4 !important;
}

.l-mg-btm\(1\/2\) {
  margin-bottom: $base-line-height / 2 !important;
}

.l-mg-btm\(3\/4\) {
  margin-bottom: $base-line-height * 0.75 !important;
}

//

.l-mg-btm\(1\) {
  margin-bottom: $base-line-height !important;
}

.l-mg-btm\(1\+1\/4\) {
  margin-bottom: $base-line-height * 1.25 !important;
}

.l-mg-btm\(1\+1\/2\) {
  margin-bottom: $base-line-height * 1.5 !important;
}

//

.l-mg-btm\(2\) {
  margin-bottom: $base-line-height * 2 !important;
}

.l-mg-btm\(3\) {
  margin-bottom: $base-line-height * 3;
}

.l-mg-btm\(3\+1\/2\) {
  margin-bottom: $base-line-height * 3.5;
}

.l-mg-btm\(4\) {
  margin-bottom: $base-line-height * 4;
}

// Left

.l-mg-left\(1\/4\) {
  margin-left: $gutter-width / 4 !important;
}

.l-mg-left\(1\/2\) {
  margin-left: $gutter-width / 2 !important;
}

.l-mg-left\(1\) {
  margin-left: $gutter-width;
}

// Right

.l-mg-right\(1\/4\) {
  margin-right: $gutter-width / 4;
}

.l-mg-right\(1\/2\) {
  margin-right: $gutter-width / 2;
}

.l-mg-right\(1\) {
  margin-right: $gutter-width;
}

.l-mg-right\(1gut4\) {
  margin-right: gutter(4);
}

// Top

.l-mg-top\(0\) {
  margin-top: 0 !important;
}

.l-mg-top\(1\/6\) {
  margin-top: $base-line-height / 6;
}

.l-mg-top\(1\/4\) {
  margin-top: $base-line-height / 4;
}

.l-mg-top\(1\/2\) {
  margin-top: $base-line-height / 2 !important;
}

.l-mg-top\(3\/4\) {
  margin-top: $base-line-height * 0.75;
}

.l-mg-top\(1\) {
  margin-top: $base-line-height !important;
}

.l-mg-top\(1\+1\/4\) {
  margin-top: $base-line-height * 1.25 !important;
}

.l-mg-top\(1\+1\/2\) {
  margin-top: $base-line-height * 1.5 !important;
}

.l-mg-top\(2\) {
  margin-top: $base-line-height * 2 !important;
}

.l-mg-top\(3\) {
  margin-top: $base-line-height * 3;
}

.l-mg-top\(3\+1\/2\) {
  margin-top: $base-line-height * 3.5;
}

.l-mg-top\(4\) {
  margin-top: $base-line-height * 4;
}

// Horizontal

.l-mg-horiz\(1\)--neg {
  margin-left: (- $gutter-width);
  margin-right: (- $gutter-width); 
}

// [?5] PADDING
// Baseline/Gutter units are passed to padding classes as arguments, such that
// (1) equals a value of 24/20px, (1/2) 12/10px and so on.

.l-pd\(1\/4\) {
  padding: $gutter-width / 4;
}

.l-pd\(1\/2\) {
  padding: $gutter-width / 2;
}

.l-pd\(1\) {
  padding: $gutter-width;
}

// Bottom

.l-pd-btm\(1\/6\) {
  padding-bottom: $base-line-height / 6 !important;
}

.l-pd-btm\(1\/4\) {
  padding-bottom: $base-line-height / 4 !important;
}

// Left

.l-pd-left\(1\/2\) {
  padding-left: ($gutter-width / 2);
}

.l-pd-left\(3\/4\) {
  padding-left: $gutter-width * 0.75 !important;
}

.l-pd-left\(1\) {
  padding-left: $gutter-width !important;
}

// Horizontal 

.l-pd-horiz\(1\/4\) {
  padding: 0 ($gutter-width / 4);
}

.l-pd-horiz\(1\/2\) {
  padding: 0 ($gutter-width / 2);
}

// [?6] WIDTH
// Low level, module-agnostic classes that rely on Susy helpers used to 
// manipulate element width. 

// Root 3

.l-width\(1of3\) {
  width: columns(1,3);
}

.l-width\(2of3\) {
  width: columns(2,3);
}

.l-width\(3of3\) {
  width: columns(3,3);
}

// Root 4

.l-width\(1of4\) {
  width: columns(1,4);
}

.l-width\(2of4\) {
  width: columns(2,4);
}

.l-width\(3of4\) {
  width: columns(3,4);
}

.l-width\(4of4\) {
  width: columns(4,4);
}

// Root 6

.l-width\(1of6\) {
  width: columns(1, 6);
}

.l-width\(2of6\) {
  width: columns(2,6);
}

.l-width\(3of6\) {
  width: columns(3,6);
}

.l-width\(4of6\) {
  width: columns(4,6);
}

.l-width\(5of6\) {
  width: columns(5,6);
}

.l-width\(6of6\) {
  width: columns(6,6);
}

// Root 6, w/ gutter

.l-width\(1of6\+1g\) {
  width: columns(1,6) + gutter(6);
}

.l-width\(2of6\+1g\) {
  width: columns(2,6) + gutter(6);
}

.l-width\(3of6\+1g\) {
  width: columns(3,6) + gutter(6);
}

.l-width\(4of6\+1g\) {
  width: columns(4,6) + gutter(6);
}

.l-width\(5of6\+1g\) {
  width: columns(5,6) + gutter(6);
}

// Root 7

.l-width\(1of7\) {
  width: columns(1, 7);
}

.l-width\(2of7\) {
  width: columns(2,7);
}

.l-width\(3of7\) {
  width: columns(3,7);
}

.l-width\(4of7\) {
  width: columns(4,7);
}

.l-width\(5of7\) {
  width: columns(5,7);
}

.l-width\(6of7\) {
  width: columns(6,7);
}

.l-width\(7of7\) {
  width: columns(7,7);
}

// Root 7, w/ gutter

.l-width\(1of7\+1g\) {
  width: columns(1,7) + gutter(7);
}

.l-width\(2of7\+1g\) {
  width: columns(2,7) + gutter(7);
}

.l-width\(3of7\+1g\) {
  width: columns(3,7) + gutter(7);
}

.l-width\(4of7\+1g\) {
  width: columns(4,7) + gutter(7);
}

.l-width\(5of7\+1g\) {
  width: columns(5,7) + gutter(7);
}

.l-width\(6of7\+1g\) {
  width: columns(6,7) + gutter(7);
}

// Root 8

.l-width\(1of8\) {
  width: columns(1, 8);
}

.l-width\(2of8\) {
  width: columns(2,8);
}

.l-width\(3of8\) {
  width: columns(3,8);
}

.l-width\(4of8\) {
  width: columns(4,8);
}

.l-width\(5of8\) {
  width: columns(5,8);
}

.l-width\(6of8\) {
  width: columns(6,8);
}

.l-width\(7of8\) {
  width: columns(7,8);
}

.l-width\(8of8\) {
  width: columns(8,8);
}

// Root 8, w/ gutter

.l-width\(1of8\+1g\) {
  width: columns(1,8) + gutter(8);
}

.l-width\(2of8\+1g\) {
  width: columns(2,8) + gutter(8);
}

.l-width\(3of8\+1g\) {
  width: columns(3,8) + gutter(8);
}

.l-width\(4of8\+1g\) {
  width: columns(4,8) + gutter(8);
}

.l-width\(5of8\+1g\) {
  width: columns(5,8) + gutter(8);
}

.l-width\(6of8\+1g\) {
  width: columns(6,8) + gutter(8);
}

.l-width\(7of8\+1g\) {
  width: columns(7,8) + gutter(8);
}

// Root 10

.l-width\(1of10\) {
  width: columns(1, 10);
}

.l-width\(2of10\) {
  width: columns(2,10);
}

.l-width\(3of10\) {
  width: columns(3,10);
}

.l-width\(4of10\) {
  width: columns(4,10);
}

.l-width\(5of10\) {
  width: columns(5,10);
}

.l-width\(6of10\) {
  width: columns(6,10);
}

.l-width\(7of10\) {
  width: columns(7,10);
}

.l-width\(8of10\) {
  width: columns(8,10);
}

.l-width\(9of10\) {
  width: columns(9,10);
}

.l-width\(10of10\) {
  width: columns(10,10);
}

// Root 10, w/ gutter

.l-width\(1of10\+1g\) {
  width: columns(1,10) + gutter(10);
}

.l-width\(2of10\+1g\) {
  width: columns(2,10) + gutter(10);
}

.l-width\(3of10\+1g\) {
  width: columns(3,10) + gutter(10);
}

.l-width\(4of10\+1g\) {
  width: columns(4,10) + gutter(10);
}

.l-width\(5of10\+1g\) {
  width: columns(5,10) + gutter(10);
}

.l-width\(6of10\+1g\) {
  width: columns(6,10) + gutter(10);
}

.l-width\(7of10\+1g\) {
  width: columns(7,10) + gutter(10);
}

.l-width\(8of10\+1g\) {
  width: columns(8,10) + gutter(10);
}

.l-width\(9of10\+1g\) {
  width: columns(9,10) + gutter(10);
}

// Percentages

.l-width\(25\) {
  width: 25% !important;
}

.l-width\(50\) {
  width: 50% !important;
}

.l-width\(75\) {
  width: 75% !important;
}

.l-width\(100\) {
  width: 100% !important;
}
